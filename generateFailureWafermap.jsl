// Use the local namespace
Names Default To Here(1);

// Plots failure of the first parameter in the list
generateFailureWafermap=Function({run},{Default Local},
	
	whichparams=::rundicts[run]["whichparams"];
	htab=::rundicts[run]["htab"];
	// Note below that the FAILBOOL column is used to color the plot (*not* the FAILPCT column).
	//   The "mean" summary statistic is used so that FAILBOOL gets averaged over all measurements
	//   with the same COORD and LOT_ID.  (We don't use FAILPCT, because that's a column that the
	//   main script uses internally, and it has *already* been averaged over each wafer.)
	// The plot is wrapped by LOT_ID
	// The shape is specified by COORD_CAT
	// Show Missing Shapes checkbox has been checked so the circle appears
	// Ticks and labels are not shown, because they are meaningless...
	// The title has been specified as "[paramname] Failure Rate"

	
	// When the report is closed, it should also
	// - note this in the log
	// - close the two data tables (and not throw an error if they're already closed)
	// - empty out this entry from rundicts
	win=New Window("Failure Maps",vb=VListBox());
	eval(eval expr(
		win<<On Close(
			Write("Closing Run "||Char(run)||".\!N");
			Try(Close(::rundicts[expr(run)]["htab"],No Save));
			Try(Close(::rundicts[expr(run)]["dtLimits"],No Save));
			::rundicts[expr(run)]=.;
			);
	));	
	

	// For each parameter
	For(p=1, p<=N Items(whichparams),p++,
		paramname=whichparams[p];
		
		// Make the failure graph
		graph=evalexpr(Graph Builder(
			Show Control Panel( 0 ),
			
			// What variables to use
			Variables(
				Wrap( expr(column(htab,"LOT_ID" )), ShowTitle(0)),
				Color( expr(eval expr(column(htab,expr(paramname||"_FAILBOOL" ))))),
				Shape( expr(column(htab,"Coord_CAT" )))
			),
			
			// Beyond here is just aesthetics
			Elements(
				Map Shapes(
					Legend( 2 ),
					Summary Statistic( "Mean" ),  //important
					Show Missing Shapes( 1 )
				)
			),
			SendToReport(
				Dispatch({},
					"Graph Builder",
					OutlineBox,
					{Set Title(expr(paramname))}
				),
				Dispatch(
					{},
					"",
					ScaleBox,
					{Show Major Ticks( 0 ), Show Minor Ticks( 0 ), Show Labels( 0 )}
				),
				Dispatch(
					{},
					"",
					ScaleBox( 2 ),
					{Show Major Ticks( 0 ), Show Minor Ticks( 0 ), Show Labels( 0 )}
				),
				Dispatch( {}, "400", LegendBox, {Set Title( "Failure Rate" )} ),
				Dispatch( {}, "graph title", TextEditBox, {Set Text( "" )} )
			)
		));
		
		vb<<Append(graph);
	));